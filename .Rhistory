##avalon regression
lmavalon <- lm(price ~ mileage + year, data = avalonreg)
summary(lmavalon)
xbavalon$predicted <- predict(lmavalon)
xbavalon$residuals <- residuals(lmavalon)
avalonreg$predicted <- predict(lmavalon)
avalonreg$residuals <- residuals(lmavalon)
cartotalsumm <- cartotal[c("price", "mileage", "car_id")]
summarystats <- tbl_summary(cartotalsumm, by = car_id) %>% modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
tbl_summary(cartotalsumm, by = car_id) %>% modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars()
lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tct <- lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tbl_merge(
tbls = list(xbt, tct, avalont)
)
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "Toyota Avalon")
)
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**")
)
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared, AIC, sigma))
lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared, AIC, sigma))
lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared))
lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared, adj.rsquared))
lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared, adj.r.squared))
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)%>%
add_glance_source_note(include = c(r.squared, adj.r.squared))
tct <- lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared, adj.r.squared))
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared, adj.r.squared))
regtable <- tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**")
)
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**")
)
lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE) %>%
add_glance_source_note(include = c(r.squared, adj.r.squared))
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**")) %>%
modify_table_body(~.x %>% arrange(row_type == "glance_statistic"))
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**")) %>%
modify_table_body(~.x %>% arrange(row_type == "glance_statistic"))
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**")) %>%
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tct <- lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tct <- lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**"))
regtable <- tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**"))
regtable %>%
as_gt() %>%
gt::gtsave(filename = "D:/RLearning/usedcarcomp/regtable.html")
cartotalsumm$hundredmileage <- cartotalsumm$mileage * 100
View(cartotalsumm)
cartotal$perhundred_miles <- cartotal$mileage * 100
xbreg <- subset(cartotal, car_id == "1")
tcreg <- subset(cartotal, car_id == "2")
avalonreg <- subset(cartotal, car_id == "3")
xbreg <- na.omit(xbreg)
tcreg <- na.omit(tcreg)
avalonreg <- na.omit(avalonreg)
xbreg$year <- as.factor(xbreg$year)
tcreg$year <- as.factor(tcreg$year)
avalonreg$year <- as.factor(avalonreg$year)
lmxb <- lm(price ~ mileage + year, data = xbreg)
summary(lmxb)
lmxb <- lm(price ~ perhundred_miles + year, data = xbreg)
summary(lmxb)
##Regression analysis
cartotal <- read.csv("D:/RLearning/usedcarcomp/cartotal.csv", header = TRUE, sep = ",")
cartotal$perhundred_miles <- cartotal$mileage / 100
#separating by car
xbreg <- subset(cartotal, car_id == "1")
tcreg <- subset(cartotal, car_id == "2")
avalonreg <- subset(cartotal, car_id == "3")
#removing any potential NULL rows, I was having a problem with this earlier,
#so this is more of a prophylactic function than solving an actual problem
xbreg <- na.omit(xbreg)
tcreg <- na.omit(tcreg)
avalonreg <- na.omit(avalonreg)
xbreg$year <- as.factor(xbreg$year)
tcreg$year <- as.factor(tcreg$year)
avalonreg$year <- as.factor(avalonreg$year)
##xB regression
lmxb <- lm(price ~ perhundred_miles + year, data = xbreg)
summary(lmxb)
library(ggplot2)
library(dplyr)
library(Cairo)
library(gtsummary)
options(scipen = 999999)
##Regression analysis
cartotal <- read.csv("D:/RLearning/usedcarcomp/cartotal.csv", header = TRUE, sep = ",")
cartotal$perhundred_mileage <- cartotal$mileage / 100
#separating by car
xbreg <- subset(cartotal, car_id == "1")
tcreg <- subset(cartotal, car_id == "2")
avalonreg <- subset(cartotal, car_id == "3")
#removing any potential NULL rows, I was having a problem with this earlier,
#so this is more of a prophylactic function than solving an actual problem
xbreg <- na.omit(xbreg)
tcreg <- na.omit(tcreg)
avalonreg <- na.omit(avalonreg)
xbreg$year <- as.factor(xbreg$year)
tcreg$year <- as.factor(tcreg$year)
avalonreg$year <- as.factor(avalonreg$year)
##xB regression
lmxb <- lm(price ~ perhundred_mileage + year, data = xbreg)
summary(lmxb)
xbreg$predicted <- predict(lmxb)
xbreg$residuals <- residuals(lmxb)
##tC regression
lmtc <- lm(price ~ perhundred_mileage + year, data = tcreg)
summary(lmtc)
tcreg$predicted <- predict(lmtc)
tcreg$residuals <- residuals(lmtc)
##avalon regression
lmavalon <- lm(price ~ perhundred_mileage + year, data = avalonreg)
summary(lmavalon)
avalonreg$predicted <- predict(lmavalon)
avalonreg$residuals <- residuals(lmavalon)
options(scipen = 999999)
##Regression analysis
cartotal <- read.csv("D:/RLearning/usedcarcomp/cartotal.csv", header = TRUE, sep = ",")
cartotal$perthousand_mileage <- cartotal$mileage / 100
#separating by car
xbreg <- subset(cartotal, car_id == "1")
tcreg <- subset(cartotal, car_id == "2")
avalonreg <- subset(cartotal, car_id == "3")
#removing any potential NULL rows, I was having a problem with this earlier,
#so this is more of a prophylactic function than solving an actual problem
xbreg <- na.omit(xbreg)
tcreg <- na.omit(tcreg)
avalonreg <- na.omit(avalonreg)
xbreg$year <- as.factor(xbreg$year)
tcreg$year <- as.factor(tcreg$year)
avalonreg$year <- as.factor(avalonreg$year)
##xB regression
lmxb <- lm(price ~ perthousand_mileage + year, data = xbreg)
summary(lmxb)
xbreg$predicted <- predict(lmxb)
xbreg$residuals <- residuals(lmxb)
##tC regression
lmtc <- lm(price ~ perthousand_mileage + year, data = tcreg)
summary(lmtc)
tcreg$predicted <- predict(lmtc)
tcreg$residuals <- residuals(lmtc)
##avalon regression
lmavalon <- lm(price ~ perthousand_mileage + year, data = avalonreg)
summary(lmavalon)
avalonreg$predicted <- predict(lmavalon)
avalonreg$residuals <- residuals(lmavalon)
##Regression analysis
cartotal <- read.csv("D:/RLearning/usedcarcomp/cartotal.csv", header = TRUE, sep = ",")
cartotal$perthousand_mileage <- cartotal$mileage / 1000
#separating by car
xbreg <- subset(cartotal, car_id == "1")
tcreg <- subset(cartotal, car_id == "2")
avalonreg <- subset(cartotal, car_id == "3")
#removing any potential NULL rows, I was having a problem with this earlier,
#so this is more of a prophylactic function than solving an actual problem
xbreg <- na.omit(xbreg)
tcreg <- na.omit(tcreg)
avalonreg <- na.omit(avalonreg)
xbreg$year <- as.factor(xbreg$year)
tcreg$year <- as.factor(tcreg$year)
avalonreg$year <- as.factor(avalonreg$year)
##xB regression
lmxb <- lm(price ~ perthousand_mileage + year, data = xbreg)
summary(lmxb)
xbreg$predicted <- predict(lmxb)
xbreg$residuals <- residuals(lmxb)
##tC regression
lmtc <- lm(price ~ perthousand_mileage + year, data = tcreg)
summary(lmtc)
tcreg$predicted <- predict(lmtc)
tcreg$residuals <- residuals(lmtc)
##avalon regression
lmavalon <- lm(price ~ perthousand_mileage + year, data = avalonreg)
summary(lmavalon)
avalonreg$predicted <- predict(lmavalon)
avalonreg$residuals <- residuals(lmavalon)
ggplot(xbreg, aes(x = mileage, y = price)) +
geom_segment(aes(xend = mileage, yend = predicted), alpha = .2) +
geom_point() +
geom_point(aes(y=predicted), shape = 1) +
theme_classic()
ggplot(xbreg, aes(x = mileage, y = price)) +
geom_segment(aes(xend = mileage, yend = predicted), alpha = .2) +
geom_point() +
geom_point(aes(y=predicted), shape = 1) +
theme_classic()
ggcolors <- c("#E69F00", "#56B4E9", "#009E73")
ggplot(cartotal, aes(x = year, y = price, color = factor(car_id))) +
geom_point() +
stat_smooth(method = 'lm', se = FALSE) +
theme_classic() +
labs(title = "Relationship Between Model Year and Price") +
scale_colour_manual(values = ggcolors, name = "Car Models", labels = c("Scion xB","Scion tC","Toyota Avalon"))
ggplot(xbreg, aes(x = mileage, y = price)) +
geom_segment(aes(xend = mileage, yend = predicted), alpha = .2) +
geom_point() +
geom_point(aes(y=predicted), shape = 1) +
theme_classic() +
labs(title = "Residual Plot")
ggplot(data = cartotal, aes(x = price)) +
geom_density(alpha = 0.3, size = 1, aes(y = ..density.., color = factor(website_id)))+
geom_histogram(aes(y = ..density..), bins = 16, alpha = 0.3, color = 'black', fill = 'grey') +
theme_classic() +
theme(legend.position = c(0.83,0.8), legend.background = element_rect(size = 0.2, linetype = "solid", color = "black")) +
labs(title = "Mixed Density Plot and Histogram", subtitle = "Distribution of listing prices on each website") +
scale_color_manual(name = "Car Models", labels = c("Autotrader", "Cars.com", "Truecar"), values = ggcolors)
ggplot(data = cartotal, aes(x=year, y = price, color = factor(car_id))) +
geom_jitter() +
stat_smooth(method = 'lm', se = FALSE) +
theme_classic() +
theme(legend.position = c(0.8,0.2), legend.background = element_rect(size = 0.2, linetype = "solid", color = "black")) +
labs(title = "Relationship Between Model Year and Price") +
scale_colour_manual(values = ggcolors, name = "Car Models", labels = c("Scion xB","Scion tC","Toyota Avalon"))
ggplot(data = cartotal, aes(x=year, y = price, color = factor(car_id))) +
geom_point() +
stat_smooth(method = 'lm', se = FALSE) +
theme_classic() +
theme(legend.position = c(0.8,0.2), legend.background = element_rect(size = 0.2, linetype = "solid", color = "black")) +
labs(title = "Relationship Between Model Year and Price") +
scale_colour_manual(values = ggcolors, name = "Car Models", labels = c("Scion xB","Scion tC","Toyota Avalon"))
ggplot(data = cartotal, aes(x=year, y = price, color = factor(car_id))) +
geom_point() +
stat_smooth(method = 'lm', se = FALSE) +
theme_classic() +
theme(legend.position = c(0.8,0.2), legend.background = element_rect(size = 0.2, linetype = "solid", color = "black")) +
labs(title = "Relationship Between Model Year and Price") +
scale_colour_manual(values = ggcolors, name = "Car Models", labels = c("Scion xB","Scion tC","Toyota Avalon"))
ggplot(xbreg, aes(x = mileage, y = price)) +
geom_segment(aes(xend = mileage, yend = predicted), alpha = .2) +
geom_point() +
geom_point(aes(y=predicted), shape = 1) +
theme_classic() +
labs(title = "Residual Plot")
write.csv(xbreg, "D:/RLearning/usedcarcomp/xbreg.csv", row.names = FALSE)
tbl_summary(cartotalsumm, by = car_id, statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
tbl_summary(cartotalsumm, by = car_id, statistic = list(all_continuous() ~ "{mean} {median} ({sd})")) %>%
modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
tbl_summary(cartotalsumm, by = car_id, statistic = list(all_continuous() ~ "{mean},{median},({sd})")) %>%
modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
tbl_summary(cartotalsumm, by = car_id, statistic = list(all_continuous() ~ "{mean}, {median}, ({sd})")) %>%
modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
library(ggplot2)
library(dplyr)
library(Cairo)
library(gtsummary)
options(scipen = 999999)
##Regression analysis
cartotal <- read.csv("D:/RLearning/usedcarcomp/cartotal.csv", header = TRUE, sep = ",")
cartotal$perthousand_mileage <- cartotal$mileage / 1000
#separating by car
xbreg <- subset(cartotal, car_id == "1")
tcreg <- subset(cartotal, car_id == "2")
avalonreg <- subset(cartotal, car_id == "3")
#removing any potential NULL rows, I was having a problem with this earlier,
#so this is more of a prophylactic function than solving an actual problem
xbreg <- na.omit(xbreg)
tcreg <- na.omit(tcreg)
avalonreg <- na.omit(avalonreg)
##Turning years to factors for regression
xbreg$year <- as.factor(xbreg$year)
tcreg$year <- as.factor(tcreg$year)
avalonreg$year <- as.factor(avalonreg$year)
##xB regression
lmxb <- lm(price ~ perthousand_mileage + year, data = xbreg)
summary(lmxb)
xbreg$predicted <- predict(lmxb)
xbreg$residuals <- residuals(lmxb)
##tC regression
lmtc <- lm(price ~ perthousand_mileage + year, data = tcreg)
summary(lmtc)
tcreg$predicted <- predict(lmtc)
tcreg$residuals <- residuals(lmtc)
##avalon regression
lmavalon <- lm(price ~ perthousand_mileage + year, data = avalonreg)
summary(lmavalon)
avalonreg$predicted <- predict(lmavalon)
avalonreg$residuals <- residuals(lmavalon)
####gtsummary stuff
####summary statistics
cartotalsumm <- cartotal[c("price", "mileage", "car_id")]
tbl_summary(cartotalsumm, by = car_id, statistic = list(all_continuous() ~ "{mean}, {median}, ({sd})")) %>%
modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
View(cartotal)
subset(cartotal, mileage > 199999)
mileage200000 <- subset(cartotal, mileage > 199999)
View(mileage200000)
regtable
#Regression tables
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tct <- lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**"))
lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
library(ggplot2)
library(dplyr)
library(Cairo)
library(gtsummary)
lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
library(ggplot2)
library(dplyr)
library(Cairo)
library(gtsummary)
options(scipen = 999999)
##Regression analysis
cartotal <- read.csv("D:/RLearning/usedcarcomp/cartotal.csv", header = TRUE, sep = ",")
cartotal$perthousand_mileage <- cartotal$mileage / 1000
#separating by car
xbreg <- subset(cartotal, car_id == "1")
tcreg <- subset(cartotal, car_id == "2")
avalonreg <- subset(cartotal, car_id == "3")
#removing any potential NULL rows, I was having a problem with this earlier,
#so this is more of a prophylactic function than solving an actual problem
xbreg <- na.omit(xbreg)
tcreg <- na.omit(tcreg)
avalonreg <- na.omit(avalonreg)
##Turning years to factors for regression
xbreg$year <- as.factor(xbreg$year)
tcreg$year <- as.factor(tcreg$year)
avalonreg$year <- as.factor(avalonreg$year)
##xB regression
lmxb <- lm(price ~ perthousand_mileage + year, data = xbreg)
summary(lmxb)
xbreg$predicted <- predict(lmxb)
xbreg$residuals <- residuals(lmxb)
##tC regression
lmtc <- lm(price ~ perthousand_mileage + year, data = tcreg)
summary(lmtc)
tcreg$predicted <- predict(lmtc)
tcreg$residuals <- residuals(lmtc)
##avalon regression
lmavalon <- lm(price ~ perthousand_mileage + year, data = avalonreg)
summary(lmavalon)
avalonreg$predicted <- predict(lmavalon)
avalonreg$residuals <- residuals(lmavalon)
####gtsummary stuff
####summary statistics
cartotalsumm <- cartotal[c("price", "mileage", "car_id")]
summarystats <- tbl_summary(cartotalsumm, by = car_id, statistic = list(all_continuous() ~ "{mean}, {median}, ({sd})")) %>%
modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
tbl_summary(cartotalsumm, by = car_id, statistic = list(all_continuous() ~ "{mean}, {median}, ({sd})")) %>%
modify_header(list(
stat_1 ~ "**Scion xB**, N = {n}",
stat_2 ~ "**Scion tC**, N = {n}",
stat_3 ~ "**Toyota Avalon**, N = {n}"
))
summarystats %>%
as_gt() %>%
gt::gtsave(filename = "D:/RLearning/usedcarcomp/summarystats.html")
#Regression tables
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tct <- lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
xbt <- lmxb %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tct <- lmtc %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
avalont <- lmavalon %>% tbl_regression(intercept = TRUE) %>%
bold_labels() %>%
add_significance_stars(hide_p = FALSE)
tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**"))
regtable <- tbl_merge(
tbls = list(xbt, tct, avalont),
tab_spanner = c("**Scion xB**", "**Scion tC**", "**Toyota Avalon**"))
regtable %>%
as_gt() %>%
gt::gtsave(filename = "D:/RLearning/usedcarcomp/regtable.html")
write.csv(xbreg, "D:/RLearning/usedcarcomp/xbreg.csv", row.names = FALSE)
